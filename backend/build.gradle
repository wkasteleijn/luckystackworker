plugins {
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
    alias(libs.plugins.spotless)
    id 'java'
    id 'maven-publish'
    id 'application'
}

application {
    mainClass = 'nl.wilcokas.luckystackworker.LuckystackWorkerApplication'
}

group = 'nl.wilcokas'
version = '6.21.0'
description = 'LuckyStackWorker'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    flatDir {
        dirs "${System.getProperty("user.home")}/Library/ParallelColt" // IMPORTANT: See README for more information
    }
    mavenCentral()
}

dependencies {
    implementation libs.org.springframework.boot.spring.boot.starter
    implementation libs.org.springframework.boot.spring.boot.starter.web
    implementation libs.commons.io.commons.io
    implementation libs.org.apache.velocity.velocity.engine.core
    implementation libs.org.apache.commons.commons.text
    implementation libs.net.imagej.ij
    implementation libs.org.yaml.snakeyaml
    implementation libs.com.fasterxml.jackson.datatype.jackson.datatype.jsr310
    implementation libs.org.apache.commons.math3
    implementation libs.net.sourceforge.parallelcolt
    implementation libs.io.github.stevenjwest.paralleliterativedeconvolution
    implementation libs.com.github.wendykierp.jtransforms
    implementation libs.org.apache.httpcomponents.client5

    // Lombok for main
    compileOnly libs.org.projectlombok.lombok
    annotationProcessor libs.org.projectlombok.lombok

    // Lombok for tests
    testCompileOnly libs.org.projectlombok.lombok
    testAnnotationProcessor libs.org.projectlombok.lombok

    // Testing
    testImplementation libs.org.springframework.boot.spring.boot.starter.test

}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.generatedSourceOutputDirectory.set(file("$buildDir/generated/sources/annotations"))
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
}

spotless {
    java {
        googleJavaFormat(libs.versions.google.java.format.get())
        target 'src/**/*.java'
    }
}

bootJar {
    archiveFileName = "luckystackworker.jar"
    mainClass.set('nl.wilcokas.luckystackworker.LuckystackWorkerApplication')
}
